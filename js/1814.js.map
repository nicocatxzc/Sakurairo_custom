{"version":3,"file":"1814.js","mappings":"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","sources":["webpack://sakurairo-scripts/./node_modules/tocbot/src/js/build-html.js","webpack://sakurairo-scripts/./node_modules/tocbot/src/js/default-options.js","webpack://sakurairo-scripts/./node_modules/tocbot/src/js/parse-content.js","webpack://sakurairo-scripts/./node_modules/tocbot/src/js/scroll-smooth/index.js","webpack://sakurairo-scripts/./node_modules/tocbot/src/js/index-esm.js","webpack://sakurairo-scripts/./node_modules/tocbot/src/js/update-toc-scroll.js","webpack://sakurairo-scripts/./node_modules/tocbot/index.js"],"sourcesContent":["/**\n * This file is responsible for building the DOM and updating DOM state.\n *\n * @author Tim Scanlin\n */\n\nexport default function (options) {\n  const forEach = [].forEach\n  const some = [].some\n  const body = typeof window !== \"undefined\" && document.body\n  const SPACE_CHAR = \" \"\n  let tocElement\n  let currentlyHighlighting = true\n  let eventCount = 0\n\n  /**\n   * Create link and list elements.\n   * @param {Object} d\n   * @param {HTMLElement} container\n   * @return {HTMLElement}\n   */\n  function createEl(d, container) {\n    const link = container.appendChild(createLink(d))\n    if (d.children.length) {\n      const list = createList(d.isCollapsed)\n      d.children.forEach((child) => {\n        createEl(child, list)\n      })\n      link.appendChild(list)\n    }\n  }\n\n  /**\n   * Render nested heading array data into a given element.\n   * @param {HTMLElement} parent Optional. If provided updates the {@see tocElement} to match.\n   * @param {Array} data\n   * @return {HTMLElement}\n   */\n  function render(parent, data) {\n    const collapsed = false\n    const container = createList(collapsed)\n\n    data.forEach((d) => {\n      createEl(d, container)\n    })\n\n    // Return if no TOC element is provided or known.\n    tocElement = parent || tocElement\n    if (tocElement === null) {\n      return\n    }\n\n    // Remove existing child if it exists.\n    if (tocElement.firstChild) {\n      tocElement.removeChild(tocElement.firstChild)\n    }\n\n    // Just return the parent and don't append the list if no links are found.\n    if (data.length === 0) {\n      return tocElement\n    }\n\n    // Append the Elements that have been created\n    return tocElement.appendChild(container)\n  }\n\n  /**\n   * Create link element.\n   * @param {Object} data\n   * @return {HTMLElement}\n   */\n  function createLink(data) {\n    const item = document.createElement(\"li\")\n    const a = document.createElement(\"a\")\n    if (options.listItemClass) {\n      item.setAttribute(\"class\", options.listItemClass)\n    }\n\n    if (options.onClick) {\n      a.onclick = options.onClick\n    }\n\n    if (options.includeTitleTags) {\n      a.setAttribute(\"title\", data.textContent)\n    }\n\n    if (options.includeHtml && data.childNodes.length) {\n      forEach.call(data.childNodes, (node) => {\n        a.appendChild(node.cloneNode(true))\n      })\n    } else {\n      // Default behavior. Set to textContent to keep tests happy.\n      a.textContent = data.textContent\n    }\n    a.setAttribute(\"href\", `${options.basePath}#${data.id}`)\n    a.setAttribute(\n      \"class\",\n      `${\n        options.linkClass + SPACE_CHAR\n      }node-name--${data.nodeName}${SPACE_CHAR}${options.extraLinkClasses}`,\n    )\n    item.appendChild(a)\n    return item\n  }\n\n  /**\n   * Create list element.\n   * @param {Boolean} isCollapsed\n   * @return {HTMLElement}\n   */\n  function createList(isCollapsed) {\n    const listElement = options.orderedList ? \"ol\" : \"ul\"\n    const list = document.createElement(listElement)\n    let classes = options.listClass + SPACE_CHAR + options.extraListClasses\n    if (isCollapsed) {\n      // No plus/equals here fixes compilation issue.\n      classes = classes + SPACE_CHAR + options.collapsibleClass\n      classes = classes + SPACE_CHAR + options.isCollapsedClass\n    }\n    list.setAttribute(\"class\", classes)\n    return list\n  }\n\n  /**\n   * Update fixed sidebar class.\n   * @return {HTMLElement}\n   */\n  function updateFixedSidebarClass() {\n    const scrollTop = getScrollTop()\n\n    const posFixedEl = document.querySelector(options.positionFixedSelector)\n    if (options.fixedSidebarOffset === \"auto\") {\n      options.fixedSidebarOffset = tocElement.offsetTop\n    }\n\n    if (scrollTop > options.fixedSidebarOffset) {\n      if (posFixedEl.className.indexOf(options.positionFixedClass) === -1) {\n        posFixedEl.className += SPACE_CHAR + options.positionFixedClass\n      }\n    } else {\n      posFixedEl.className = posFixedEl.className.replace(\n        SPACE_CHAR + options.positionFixedClass,\n        \"\",\n      )\n    }\n  }\n\n  /**\n   * Get top position of heading\n   * @param {HTMLElement} obj\n   * @return {int} position\n   */\n  function getHeadingTopPos(obj) {\n    let position = 0\n    if (obj !== null) {\n      position = obj.offsetTop\n      if (options.hasInnerContainers) {\n        position += getHeadingTopPos(obj.offsetParent)\n      }\n    }\n    return position\n  }\n\n  /**\n   * Update className only when changed.\n   * @param {HTMLElement} obj\n   * @param {string} className\n   * @return {HTMLElement} obj\n   */\n  function updateClassname(obj, className) {\n    if (obj && obj.className !== className) {\n      obj.className = className\n    }\n    return obj\n  }\n\n  /**\n   * Update TOC highlighting and collapsed groupings.\n   */\n  function updateToc(headingsArray, event) {\n    // Add fixed class at offset\n    if (options.positionFixedSelector) {\n      updateFixedSidebarClass()\n    }\n    // Get the top most heading currently visible on the page so we know what to highlight.\n    const headings = headingsArray\n    // This is needed for scroll events since document doesn't have getAttribute\n    const clickedHref = event?.target?.getAttribute\n      ? event?.target?.getAttribute(\"href\")\n      : null\n    const isBottomMode =\n      clickedHref && clickedHref.charAt(0) === \"#\"\n        ? getIsHeaderBottomMode(clickedHref.replace(\"#\", \"\"))\n        : false\n    const shouldUpdate = currentlyHighlighting || isBottomMode\n    if (event && eventCount < 5) {\n      eventCount++\n    }\n\n    if (shouldUpdate && !!tocElement && headings.length > 0) {\n      const topHeader = getTopHeader(headings)\n\n      const oldActiveTocLink = tocElement.querySelector(\n        `.${options.activeLinkClass}`,\n      )\n\n      const topHeaderId = topHeader.id.replace(\n        /([ #;&,.+*~':\"!^$[\\]()=>|/\\\\@])/g,\n        \"\\\\$1\",\n      )\n      const hashId = window.location.hash.replace(\"#\", \"\")\n      let activeId = topHeaderId\n\n      // Handle case where they clicked a link that cannot be scrolled to.\n      const isPageBottomMode = getIsPageBottomMode()\n      if (clickedHref && isBottomMode) {\n        activeId = clickedHref.replace(\"#\", \"\")\n      } else if (\n        hashId &&\n        hashId !== topHeaderId &&\n        isPageBottomMode &&\n        (getIsHeaderBottomMode(topHeaderId) || eventCount <= 2)\n      ) {\n        // This is meant to handle the case\n        // of showing the items as highlighted when they\n        // are in bottom mode and cannot be scrolled to.\n        // Make sure that they stay highlighted on refresh\n        // too, not just when clicked.\n        activeId = hashId\n      }\n\n      const activeTocLink = tocElement.querySelector(\n        `.${options.linkClass}[href=\"${options.basePath}#${activeId}\"]`,\n      )\n      // Performance improvement to only change the classes\n      // for the toc if a new link should be highlighted.\n      if (oldActiveTocLink === activeTocLink) {\n        return\n      }\n\n      // Remove the active class from the other tocLinks.\n      const tocLinks = tocElement.querySelectorAll(`.${options.linkClass}`)\n      forEach.call(tocLinks, (tocLink) => {\n        updateClassname(\n          tocLink,\n          tocLink.className.replace(SPACE_CHAR + options.activeLinkClass, \"\"),\n        )\n      })\n      const tocLis = tocElement.querySelectorAll(`.${options.listItemClass}`)\n      forEach.call(tocLis, (tocLi) => {\n        updateClassname(\n          tocLi,\n          tocLi.className.replace(SPACE_CHAR + options.activeListItemClass, \"\"),\n        )\n      })\n\n      // Add the active class to the active tocLink.\n      if (\n        activeTocLink &&\n        activeTocLink.className.indexOf(options.activeLinkClass) === -1\n      ) {\n        activeTocLink.className += SPACE_CHAR + options.activeLinkClass\n      }\n      const li = activeTocLink?.parentNode\n      if (li && li.className.indexOf(options.activeListItemClass) === -1) {\n        li.className += SPACE_CHAR + options.activeListItemClass\n      }\n\n      const tocLists = tocElement.querySelectorAll(\n        `.${options.listClass}.${options.collapsibleClass}`,\n      )\n\n      // Collapse the other collapsible lists.\n      forEach.call(tocLists, (list) => {\n        if (list.className.indexOf(options.isCollapsedClass) === -1) {\n          list.className += SPACE_CHAR + options.isCollapsedClass\n        }\n      })\n\n      // Expand the active link's collapsible list and its sibling if applicable.\n      if (\n        activeTocLink?.nextSibling &&\n        activeTocLink.nextSibling.className.indexOf(\n          options.isCollapsedClass,\n        ) !== -1\n      ) {\n        updateClassname(\n          activeTocLink.nextSibling,\n          activeTocLink.nextSibling.className.replace(\n            SPACE_CHAR + options.isCollapsedClass,\n            \"\",\n          ),\n        )\n      }\n      removeCollapsedFromParents(activeTocLink?.parentNode.parentNode)\n    }\n  }\n\n  /**\n   * Remove collapsed class from parent elements.\n   * @param {HTMLElement} element\n   * @return {HTMLElement}\n   */\n  function removeCollapsedFromParents(element) {\n    if (\n      element &&\n      element.className.indexOf(options.collapsibleClass) !== -1 &&\n      element.className.indexOf(options.isCollapsedClass) !== -1\n    ) {\n      updateClassname(\n        element,\n        element.className.replace(SPACE_CHAR + options.isCollapsedClass, \"\"),\n      )\n      return removeCollapsedFromParents(element.parentNode.parentNode)\n    }\n    return element\n  }\n\n  /**\n   * Disable TOC Animation when a link is clicked.\n   * @param {Event} event\n   */\n  function disableTocAnimation(event) {\n    const target = event.target || event.srcElement\n    if (\n      typeof target.className !== \"string\" ||\n      target.className.indexOf(options.linkClass) === -1\n    ) {\n      return\n    }\n    // Bind to tocLink clicks to temporarily disable highlighting\n    // while smoothScroll is animating.\n    currentlyHighlighting = false\n  }\n\n  /**\n   * Enable TOC Animation.\n   */\n  function enableTocAnimation() {\n    currentlyHighlighting = true\n  }\n\n  /**\n   * Return currently highlighting status.\n   */\n  function getCurrentlyHighlighting() {\n    return currentlyHighlighting\n  }\n\n  function getIsHeaderBottomMode(headerId) {\n    const scrollEl = getScrollEl()\n    const activeHeading = document?.getElementById(headerId)\n    const isBottomMode =\n      activeHeading.offsetTop >\n      scrollEl.offsetHeight -\n        scrollEl.clientHeight * 1.4 -\n        options.bottomModeThreshold\n    return isBottomMode\n  }\n\n  function getIsPageBottomMode() {\n    const scrollEl = getScrollEl()\n    const isScrollable = scrollEl.scrollHeight > scrollEl.clientHeight\n    const isBottomMode =\n      getScrollTop() + scrollEl.clientHeight >\n      scrollEl.offsetHeight - options.bottomModeThreshold\n    return isScrollable && isBottomMode\n  }\n\n  function getScrollEl() {\n    let el\n    if (\n      options.scrollContainer &&\n      document.querySelector(options.scrollContainer)\n    ) {\n      el = document.querySelector(options.scrollContainer)\n    } else {\n      el = document.documentElement || body\n    }\n    return el\n  }\n\n  function getScrollTop() {\n    const el = getScrollEl()\n    return el?.scrollTop || 0\n  }\n\n  function getTopHeader(headings, scrollTop = getScrollTop()) {\n    let topHeader\n    some.call(headings, (heading, i) => {\n      if (getHeadingTopPos(heading) > scrollTop + options.headingsOffset + 10) {\n        // Don't allow negative index value.\n        const index = i === 0 ? i : i - 1\n        topHeader = headings[index]\n        return true\n      }\n      if (i === headings.length - 1) {\n        // This allows scrolling for the last heading on the page.\n        topHeader = headings[headings.length - 1]\n        return true\n      }\n    })\n    return topHeader\n  }\n\n  function updateUrlHashForHeader(headingsArray) {\n    const scrollTop = getScrollTop()\n    const topHeader = getTopHeader(headingsArray, scrollTop)\n    const isPageBottomMode = getIsPageBottomMode()\n    if ((!topHeader || scrollTop < 5) && !isPageBottomMode) {\n      if (!(window.location.hash === \"#\" || window.location.hash === \"\")) {\n        window.history.pushState(null, null, \"#\")\n      }\n    } else if (topHeader && !isPageBottomMode) {\n      const newHash = `#${topHeader.id}`\n      if (window.location.hash !== newHash) {\n        window.history.pushState(null, null, newHash)\n      }\n    }\n  }\n\n  return {\n    enableTocAnimation,\n    disableTocAnimation,\n    render,\n    updateToc,\n    getCurrentlyHighlighting,\n    getTopHeader,\n    getScrollTop,\n    updateUrlHashForHeader,\n  }\n}\n","export default {\n  // Where to render the table of contents.\n  tocSelector: \".js-toc\",\n  // Or, you can pass in a DOM node instead\n  tocElement: null,\n  // Where to grab the headings to build the table of contents.\n  contentSelector: \".js-toc-content\",\n  // Or, you can pass in a DOM node instead\n  contentElement: null,\n  // Which headings to grab inside of the contentSelector element.\n  headingSelector: \"h1, h2, h3\",\n  // Headings that match the ignoreSelector will be skipped.\n  ignoreSelector: \".js-toc-ignore\",\n  // For headings inside relative or absolute positioned\n  // containers within content.\n  hasInnerContainers: false,\n  // Main class to add to links.\n  linkClass: \"toc-link\",\n  // Extra classes to add to links.\n  extraLinkClasses: \"\",\n  // Class to add to active links,\n  // the link corresponding to the top most heading on the page.\n  activeLinkClass: \"is-active-link\",\n  // Main class to add to lists.\n  listClass: \"toc-list\",\n  // Extra classes to add to lists.\n  extraListClasses: \"\",\n  // Class that gets added when a list should be collapsed.\n  isCollapsedClass: \"is-collapsed\",\n  // Class that gets added when a list should be able\n  // to be collapsed but isn't necessarily collapsed.\n  collapsibleClass: \"is-collapsible\",\n  // Class to add to list items.\n  listItemClass: \"toc-list-item\",\n  // Class to add to active list items.\n  activeListItemClass: \"is-active-li\",\n  // How many heading levels should not be collapsed.\n  // For example, number 6 will show everything since\n  // there are only 6 heading levels and number 0 will collapse them all.\n  // The sections that are hidden will open\n  // and close as you scroll to headings within them.\n  collapseDepth: 0,\n  // Smooth scrolling enabled.\n  scrollSmooth: true,\n  // Smooth scroll duration.\n  scrollSmoothDuration: 420,\n  // Smooth scroll offset.\n  scrollSmoothOffset: 0,\n  // Callback for scroll end.\n  scrollEndCallback: function (e) {},\n  // Headings offset between the headings and the top of\n  // the document (this is meant for minor adjustments).\n  headingsOffset: 1,\n  // Enable the URL hash to update with the proper heading ID as\n  // a user scrolls the page.\n  enableUrlHashUpdateOnScroll: false,\n  // type of scroll handler to use. to make scroll event not too rapid.\n  // Options are: \"debounce\" or \"throttle\"\n  // when set auto , use debounce less than 333ms , other use throttle.\n  // for ios browser can't use history.pushState() more than 100 times per 30 seconds reason\n  scrollHandlerType: \"auto\",\n  //  scrollHandler delay in ms.\n  scrollHandlerTimeout: 50,\n  // Timeout between events firing to make sure it's\n  // not too rapid (for performance reasons).\n  throttleTimeout: 50,\n  // Element to add the positionFixedClass to.\n  positionFixedSelector: null,\n  // Fixed position class to add to make sidebar fixed after scrolling\n  // down past the fixedSidebarOffset.\n  positionFixedClass: \"is-position-fixed\",\n  // fixedSidebarOffset can be any number but by default is set\n  // to auto which sets the fixedSidebarOffset to the sidebar\n  // element's offsetTop from the top of the document on init.\n  fixedSidebarOffset: \"auto\",\n  // includeHtml can be set to true to include the HTML markup from the\n  // heading node instead of just including the innerText.\n  includeHtml: false,\n  // includeTitleTags automatically sets the html title tag of the link\n  // to match the title. This can be useful for SEO purposes or\n  // when truncating titles.\n  includeTitleTags: false,\n  // onclick function to apply to all links in toc. will be called with\n  // the event as the first parameter, and this can be used to stop,\n  // propagation, prevent default or perform action\n  onClick: function (e) {},\n  // orderedList can be set to false to generate unordered lists (ul)\n  // instead of ordered lists (ol)\n  orderedList: true,\n  // If there is a fixed article scroll container, set to calculate offset.\n  scrollContainer: null,\n  // prevent ToC DOM rendering if it's already rendered by an external system.\n  skipRendering: false,\n  // Optional callback to change heading labels.\n  // For example it can be used to cut down and put ellipses on multiline headings you deem too long.\n  // Called each time a heading is parsed. Expects a string and returns the modified label to display.\n  // Additionally, the attribute `data-heading-label` may be used on a heading to specify\n  // a shorter string to be used in the TOC.\n  // function (string) => string\n  headingLabelCallback: false,\n  // ignore headings that are hidden in DOM\n  ignoreHiddenElements: false,\n  // Optional callback to modify properties of parsed headings.\n  // The heading element is passed in node parameter and information\n  // parsed by default parser is provided in obj parameter.\n  // Function has to return the same or modified obj.\n  // The heading will be excluded from TOC if nothing is returned.\n  // function (object, HTMLElement) => object | void\n  headingObjectCallback: null,\n  // Set the base path, useful if you use a `base` tag in `head`.\n  basePath: \"\",\n  // Only takes affect when `tocSelector` is scrolling,\n  // keep the toc scroll position in sync with the content.\n  disableTocScrollSync: false,\n  // If this is null then just use `tocElement` or `tocSelector` instead\n  // assuming `disableTocScrollSync` is set to false. This allows for\n  // scrolling an outer element (like a nav panel w/ search) containing the toc.\n  // Please pass an element, not a selector here.\n  tocScrollingWrapper: null,\n  // Offset for the toc scroll (top) position when scrolling the page.\n  // Only effective if `disableTocScrollSync` is false.\n  tocScrollOffset: 30,\n  // Threshold for when bottom mode should be enabled to handle\n  // highlighting links that cannot be scrolled to.\n  bottomModeThreshold: 30,\n}\n","/**\n * This file is responsible for parsing the content from the DOM and making\n * sure data is nested properly.\n *\n * @author Tim Scanlin\n */\n\nexport default function parseContent(options) {\n  const reduce = [].reduce\n\n  /**\n   * Get the last item in an array and return a reference to it.\n   * @param {Array} array\n   * @return {Object}\n   */\n  function getLastItem(array) {\n    return array[array.length - 1]\n  }\n\n  /**\n   * Get heading level for a heading dom node.\n   * @param {HTMLElement} heading\n   * @return {Number}\n   */\n  function getHeadingLevel(heading) {\n    return +heading.nodeName.toUpperCase().replace(\"H\", \"\")\n  }\n\n  /**\n   * Determine whether the object is an HTML Element.\n   * Also works inside iframes. HTML Elements might be created by the parent document.\n   * @param {Object} maybeElement\n   * @return {Number}\n   */\n  function isHTMLElement(maybeElement) {\n    try {\n      return (\n        maybeElement instanceof window.HTMLElement ||\n        maybeElement instanceof window.parent.HTMLElement\n      )\n    } catch (e) {\n      return maybeElement instanceof window.HTMLElement\n    }\n  }\n\n  /**\n   * Get important properties from a heading element and store in a plain object.\n   * @param {HTMLElement} heading\n   * @return {Object}\n   */\n  function getHeadingObject(heading) {\n    // each node is processed twice by this method because nestHeadingsArray() and addNode() calls it\n    // first time heading is real DOM node element, second time it is obj\n    // that is causing problem so I am processing only original DOM node\n    if (!isHTMLElement(heading)) return heading\n\n    if (\n      options.ignoreHiddenElements &&\n      (!heading.offsetHeight || !heading.offsetParent)\n    ) {\n      return null\n    }\n\n    const headingLabel =\n      heading.getAttribute(\"data-heading-label\") ||\n      (options.headingLabelCallback\n        ? String(options.headingLabelCallback(heading.innerText))\n        : (heading.innerText || heading.textContent).trim())\n    const obj = {\n      id: heading.id,\n      children: [],\n      nodeName: heading.nodeName,\n      headingLevel: getHeadingLevel(heading),\n      textContent: headingLabel,\n    }\n\n    if (options.includeHtml) {\n      obj.childNodes = heading.childNodes\n    }\n\n    if (options.headingObjectCallback) {\n      return options.headingObjectCallback(obj, heading)\n    }\n\n    return obj\n  }\n\n  /**\n   * Add a node to the nested array.\n   * @param {Object} node\n   * @param {Array} nest\n   * @return {Array}\n   */\n  function addNode(node, nest) {\n    const obj = getHeadingObject(node)\n    const level = obj.headingLevel\n    let array = nest\n    let lastItem = getLastItem(array)\n    const lastItemLevel = lastItem ? lastItem.headingLevel : 0\n    let counter = level - lastItemLevel\n\n    while (counter > 0) {\n      lastItem = getLastItem(array)\n      // Handle case where there are multiple h5+ in a row.\n      if (lastItem && level === lastItem.headingLevel) {\n        break\n      } else if (lastItem && lastItem.children !== undefined) {\n        array = lastItem.children\n      }\n      counter--\n    }\n\n    if (level >= options.collapseDepth) {\n      obj.isCollapsed = true\n    }\n\n    array.push(obj)\n    return array\n  }\n\n  /**\n   * Select headings in content area, exclude any selector in options.ignoreSelector\n   * @param {HTMLElement} contentElement\n   * @param {Array} headingSelector\n   * @return {Array}\n   */\n  function selectHeadings(contentElement, headingSelector) {\n    let selectors = headingSelector\n    if (options.ignoreSelector) {\n      selectors = headingSelector\n        .split(\",\")\n        .map(function mapSelectors(selector) {\n          return `${selector.trim()}:not(${options.ignoreSelector})`\n        })\n    }\n    try {\n      return contentElement.querySelectorAll(selectors)\n    } catch (e) {\n      console.warn(`Headers not found with selector: ${selectors}`) // eslint-disable-line\n      return null\n    }\n  }\n\n  /**\n   * Nest headings array into nested arrays with 'children' property.\n   * @param {Array} headingsArray\n   * @return {Object}\n   */\n  function nestHeadingsArray(headingsArray) {\n    return reduce.call(\n      headingsArray,\n      function reducer(prev, curr) {\n        const currentHeading = getHeadingObject(curr)\n        if (currentHeading) {\n          addNode(currentHeading, prev.nest)\n        }\n        return prev\n      },\n      {\n        nest: [],\n      },\n    )\n  }\n\n  return {\n    nestHeadingsArray,\n    selectHeadings,\n  }\n}\n","/* eslint no-var: off */\n/* globals location, requestAnimationFrame */\n\nexport default function initSmoothScrolling(options) {\n  // if (isCssSmoothSCrollSupported()) { return }\n\n  var duration = options.duration\n  var offset = options.offset\n  if (typeof window === \"undefined\" || typeof location === \"undefined\") return\n\n  var pageUrl = location.hash ? stripHash(location.href) : location.href\n\n  delegatedLinkHijacking()\n\n  function delegatedLinkHijacking() {\n    document.body.addEventListener(\"click\", onClick, false)\n\n    function onClick(e) {\n      if (\n        !isInPageLink(e.target) ||\n        e.target.className.indexOf(\"no-smooth-scroll\") > -1 ||\n        (e.target.href.charAt(e.target.href.length - 2) === \"#\" &&\n          e.target.href.charAt(e.target.href.length - 1) === \"!\") ||\n        e.target.className.indexOf(options.linkClass) === -1\n      ) {\n        return\n      }\n\n      // Don't prevent default or hash doesn't change.\n      // e.preventDefault()\n\n      jump(e.target.hash, {\n        duration,\n        offset,\n        callback: function () {\n          setFocus(e.target.hash)\n        },\n      })\n    }\n  }\n\n  function isInPageLink(n) {\n    return (\n      n.tagName.toLowerCase() === \"a\" &&\n      (n.hash.length > 0 || n.href.charAt(n.href.length - 1) === \"#\") &&\n      (stripHash(n.href) === pageUrl || stripHash(n.href) + \"#\" === pageUrl)\n    )\n  }\n\n  function stripHash(url) {\n    return url.slice(0, url.lastIndexOf(\"#\"))\n  }\n\n  // function isCssSmoothSCrollSupported () {\n  //   return 'scrollBehavior' in document.documentElement.style\n  // }\n\n  // Adapted from:\n  // https://www.nczonline.net/blog/2013/01/15/fixing-skip-to-content-links/\n  function setFocus(hash) {\n    var element = document.getElementById(hash.substring(1))\n\n    if (element) {\n      if (!/^(?:a|select|input|button|textarea)$/i.test(element.tagName)) {\n        element.tabIndex = -1\n      }\n\n      element.focus()\n    }\n  }\n}\n\nfunction jump(target, options) {\n  var start = window.pageYOffset\n  var opt = {\n    duration: options.duration,\n    offset: options.offset || 0,\n    callback: options.callback,\n    easing: options.easing || easeInOutQuad,\n  }\n  // This makes ids that start with a number work: ('[id=\"' + decodeURI(target).split('#').join('') + '\"]')\n  // DecodeURI for nonASCII hashes, they was encoded, but id was not encoded, it lead to not finding the tgt element by id.\n  // And this is for IE: document.body.scrollTop\n  // Handle decoded and non-decoded URIs since sometimes URLs automatically transform them (support for internation chars).\n  var tgt =\n    document.querySelector(\n      '[id=\"' + decodeURI(target).split(\"#\").join(\"\") + '\"]',\n    ) || document.querySelector('[id=\"' + target.split(\"#\").join(\"\") + '\"]')\n  var distance =\n    typeof target === \"string\"\n      ? opt.offset +\n        (target\n          ? (tgt && tgt.getBoundingClientRect().top) || 0 // handle non-existent links better.\n          : -(document.documentElement.scrollTop || document.body.scrollTop))\n      : target\n  var duration =\n    typeof opt.duration === \"function\" ? opt.duration(distance) : opt.duration\n  var timeStart\n  var timeElapsed\n\n  requestAnimationFrame(function (time) {\n    timeStart = time\n    loop(time)\n  })\n  function loop(time) {\n    timeElapsed = time - timeStart\n\n    window.scrollTo(0, opt.easing(timeElapsed, start, distance, duration))\n\n    if (timeElapsed < duration) {\n      requestAnimationFrame(loop)\n    } else {\n      end()\n    }\n  }\n\n  function end() {\n    window.scrollTo(0, start + distance)\n\n    if (typeof opt.callback === \"function\") {\n      opt.callback()\n    }\n  }\n\n  // Robert Penner's easeInOutQuad - http://robertpenner.com/easing/\n  function easeInOutQuad(t, b, c, d) {\n    t /= d / 2\n    if (t < 1) return (c / 2) * t * t + b\n    t--\n    return (-c / 2) * (t * (t - 2) - 1) + b\n  }\n}\n","/* eslint no-var: off */\n/**\n * Tocbot\n * Tocbot creates a table of contents based on HTML headings on a page,\n * this allows users to easily jump to different sections of the document.\n * Tocbot was inspired by tocify (http://gregfranko.com/jquery.tocify.js/).\n * The main differences are that it works natively without any need for jquery or jquery UI).\n *\n * @author Tim Scanlin\n */\n\nimport BuildHtml from \"./build-html.js\"\nimport defaultOptions from \"./default-options.js\"\nimport ParseContent from \"./parse-content.js\"\nimport initSmoothScrolling from \"./scroll-smooth/index.js\"\nimport updateTocScroll from \"./update-toc-scroll.js\"\n\n// For testing purposes.\nexport let _options = {} // Object to store current options.\nexport let _buildHtml\nexport let _parseContent\nexport let _headingsArray\nexport let _scrollListener\n\nlet clickListener\n\n/**\n * Initialize tocbot.\n * @param {object} customOptions\n */\nexport function init(customOptions) {\n  // Merge defaults with user options.\n  // Set to options variable at the top.\n  let hasInitialized = false\n  _options = extend(defaultOptions, customOptions || {})\n\n  // Init smooth scroll if enabled (default).\n  if (_options.scrollSmooth) {\n    _options.duration = _options.scrollSmoothDuration\n    _options.offset = _options.scrollSmoothOffset\n\n    initSmoothScrolling(_options)\n  }\n\n  // Pass options to these modules.\n  _buildHtml = BuildHtml(_options)\n  _parseContent = ParseContent(_options)\n\n  // Destroy it if it exists first.\n  destroy()\n\n  const contentElement = getContentElement(_options)\n  if (contentElement === null) {\n    return\n  }\n\n  const tocElement = getTocElement(_options)\n  if (tocElement === null) {\n    return\n  }\n\n  // Get headings array.\n  _headingsArray = _parseContent.selectHeadings(\n    contentElement,\n    _options.headingSelector,\n  )\n\n  // Return if no headings are found.\n  if (_headingsArray === null) {\n    return\n  }\n\n  // Build nested headings array.\n  const nestedHeadingsObj = _parseContent.nestHeadingsArray(_headingsArray)\n  const nestedHeadings = nestedHeadingsObj.nest\n\n  // Render.\n  if (!_options.skipRendering) {\n    _buildHtml.render(tocElement, nestedHeadings)\n  } else {\n    // No need to attach listeners if skipRendering is true, this was causing errors.\n    return this\n  }\n\n  // Update Sidebar and bind listeners.\n  let isClick = false\n  // choose timeout by _options\n  const scrollHandlerTimeout =\n    _options.scrollHandlerTimeout || _options.throttleTimeout // compatible with legacy configurations\n  // choose debounce or throttle\n  // default use debounce when delay is less than 333ms\n  // the reason is ios browser has a limit : can't use history.pushState() more than 100 times per 30 seconds\n  const scrollHandler = (fn, delay) =>\n    getScrollHandler(fn, delay, _options.scrollHandlerType)\n\n  _scrollListener = scrollHandler((e) => {\n    _buildHtml.updateToc(_headingsArray, e)\n    // Only do this update for normal scrolls and not during clicks.\n    !_options.disableTocScrollSync && !isClick && updateTocScroll(_options)\n\n    if (_options.enableUrlHashUpdateOnScroll && hasInitialized) {\n      const enableUpdatingHash = _buildHtml.getCurrentlyHighlighting()\n      enableUpdatingHash && _buildHtml.updateUrlHashForHeader(_headingsArray)\n    }\n\n    const isTop = e?.target?.scrollingElement?.scrollTop === 0\n    if ((e && (e.eventPhase === 0 || e.currentTarget === null)) || isTop) {\n      _buildHtml.updateToc(_headingsArray)\n      _options.scrollEndCallback?.(e)\n    }\n  }, scrollHandlerTimeout)\n  // Fire it initially to setup the page.\n  if (!hasInitialized) {\n    _scrollListener()\n    hasInitialized = true\n  }\n\n  // Fire scroll listener on hash change to trigger highlighting changes too.\n  window.onhashchange = window.onscrollend = (e) => {\n    _scrollListener(e)\n  }\n\n  if (\n    _options.scrollContainer &&\n    document.querySelector(_options.scrollContainer)\n  ) {\n    document\n      .querySelector(_options.scrollContainer)\n      .addEventListener(\"scroll\", _scrollListener, false)\n    document\n      .querySelector(_options.scrollContainer)\n      .addEventListener(\"resize\", _scrollListener, false)\n  } else {\n    document.addEventListener(\"scroll\", _scrollListener, false)\n    document.addEventListener(\"resize\", _scrollListener, false)\n  }\n\n  // Bind click listeners to disable animation.\n  let timeout = null\n  clickListener = throttle((event) => {\n    isClick = true\n    if (_options.scrollSmooth) {\n      _buildHtml.disableTocAnimation(event)\n    }\n    _buildHtml.updateToc(_headingsArray, event)\n    // Timeout to re-enable the animation.\n    timeout && clearTimeout(timeout)\n    timeout = setTimeout(() => {\n      _buildHtml.enableTocAnimation()\n    }, _options.scrollSmoothDuration)\n    // Set is click w/ a bit of delay so that animations can finish\n    // and we don't disturb the user while they click the toc.\n    setTimeout(() => {\n      isClick = false\n    }, _options.scrollSmoothDuration + 100)\n  }, _options.throttleTimeout)\n\n  if (\n    _options.scrollContainer &&\n    document.querySelector(_options.scrollContainer)\n  ) {\n    document\n      .querySelector(_options.scrollContainer)\n      .addEventListener(\"click\", clickListener, false)\n  } else {\n    document.addEventListener(\"click\", clickListener, false)\n  }\n}\n\n/**\n * Destroy tocbot.\n */\nexport function destroy() {\n  const tocElement = getTocElement(_options)\n  if (tocElement === null) {\n    return\n  }\n\n  if (!_options.skipRendering) {\n    // Clear HTML.\n    if (tocElement) {\n      tocElement.innerHTML = \"\"\n    }\n  }\n\n  // Remove event listeners.\n  if (\n    _options.scrollContainer &&\n    document.querySelector(_options.scrollContainer)\n  ) {\n    document\n      .querySelector(_options.scrollContainer)\n      .removeEventListener(\"scroll\", _scrollListener, false)\n    document\n      .querySelector(_options.scrollContainer)\n      .removeEventListener(\"resize\", _scrollListener, false)\n    if (_buildHtml) {\n      document\n        .querySelector(_options.scrollContainer)\n        .removeEventListener(\"click\", clickListener, false)\n    }\n  } else {\n    document.removeEventListener(\"scroll\", _scrollListener, false)\n    document.removeEventListener(\"resize\", _scrollListener, false)\n    if (_buildHtml) {\n      document.removeEventListener(\"click\", clickListener, false)\n    }\n  }\n}\n\n/**\n * Refresh tocbot.\n */\nexport function refresh(customOptions) {\n  destroy()\n  init(customOptions || _options)\n}\n\n// From: https://github.com/Raynos/xtend\nconst hasOwnProp = Object.prototype.hasOwnProperty\nfunction extend(...args) {\n  const target = {}\n  for (let i = 0; i < args.length; i++) {\n    const source = args[i]\n    for (const key in source) {\n      if (hasOwnProp.call(source, key)) {\n        target[key] = source[key]\n      }\n    }\n  }\n  return target\n}\n\n// From: https://remysharp.com/2010/07/21/throttling-function-calls\nfunction throttle(fn, threshold, scope) {\n  threshold || (threshold = 250)\n  let last\n  let deferTimer\n  return function (...args) {\n    const context = scope || this\n    const now = +new Date()\n    if (last && now < last + threshold) {\n      // hold on to it\n      clearTimeout(deferTimer)\n      deferTimer = setTimeout(() => {\n        last = now\n        fn.apply(context, args)\n      }, threshold)\n    } else {\n      last = now\n      fn.apply(context, args)\n    }\n  }\n}\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait` milliseconds\n * have elapsed since the last time the debounced function was invoked.\n *\n * @param {Function} func - The function to debounce.\n * @param {number} wait - The number of milliseconds to delay.\n * @returns {Function} - Returns the new debounced function.\n */\nfunction debounce(func, wait) {\n  let timeout\n  return (...args) => {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => func.apply(this, args), wait)\n  }\n}\n\n/**\n * Creates a scroll handler with specified timeout strategy\n * @param {number} timeout - Delay duration in milliseconds\n * @param {'debounce'|'throttle'|'auto'} type - Strategy type for scroll handling\n * @returns {Function} Configured scroll handler function\n */\nfunction getScrollHandler(func, timeout, type = \"auto\") {\n  switch (type) {\n    case \"debounce\":\n      return debounce(func, timeout)\n    case \"throttle\":\n      return throttle(func, timeout)\n    default:\n      return timeout < 334 ? debounce(func, timeout) : throttle(func, timeout)\n  }\n}\n\nfunction getContentElement(options) {\n  try {\n    return (\n      options.contentElement || document.querySelector(options.contentSelector)\n    )\n  } catch (e) {\n    console.warn(`Contents element not found: ${options.contentSelector}`) // eslint-disable-line\n    return null\n  }\n}\n\nfunction getTocElement(options) {\n  try {\n    return options.tocElement || document.querySelector(options.tocSelector)\n  } catch (e) {\n    console.warn(`TOC element not found: ${options.tocSelector}`) // eslint-disable-line\n    return null\n  }\n}\n\n// Add default export for easier use.\nconst tocbot = {\n  _options,\n  _buildHtml,\n  _parseContent,\n  init,\n  destroy,\n  refresh,\n}\n\nexport default tocbot\n","export default function updateTocScroll(options) {\n  const toc =\n    options.tocScrollingWrapper ||\n    options.tocElement ||\n    document.querySelector(options.tocSelector)\n  if (toc && toc.scrollHeight > toc.clientHeight) {\n    const activeItem = toc.querySelector(`.${options.activeListItemClass}`)\n    if (activeItem) {\n      // Determine element top and bottom\n      const eTop = activeItem.offsetTop\n\n      // Check if out of view\n      // Above scroll view\n      const scrollAmount = eTop - options.tocScrollOffset\n      toc.scrollTop = scrollAmount > 0 ? scrollAmount : 0\n    }\n  }\n}\n","import { destroy, init, refresh } from \"./src/js/index-esm.js\"\nconst tocbot = { destroy, init, refresh }\n\nexport { destroy, init, refresh }\nexport default tocbot\n"],"names":["options","forEach","some","body","window","document","SPACE_CHAR","tocElement","currentlyHighlighting","eventCount","createEl","d","container","link","appendChild","data","item","createElement","a","listItemClass","setAttribute","onClick","onclick","includeTitleTags","textContent","includeHtml","childNodes","length","call","node","cloneNode","basePath","id","linkClass","nodeName","extraLinkClasses","createLink","children","list","createList","isCollapsed","child","listElement","orderedList","classes","listClass","extraListClasses","collapsibleClass","isCollapsedClass","getHeadingTopPos","obj","position","offsetTop","hasInnerContainers","offsetParent","updateClassname","className","removeCollapsedFromParents","element","indexOf","replace","parentNode","getIsHeaderBottomMode","headerId","scrollEl","getScrollEl","activeHeading","getElementById","offsetHeight","clientHeight","bottomModeThreshold","getIsPageBottomMode","isScrollable","scrollHeight","isBottomMode","getScrollTop","el","scrollContainer","querySelector","documentElement","scrollTop","getTopHeader","headings","topHeader","heading","i","headingsOffset","enableTocAnimation","disableTocAnimation","event","target","srcElement","render","parent","firstChild","removeChild","updateToc","headingsArray","positionFixedSelector","posFixedEl","fixedSidebarOffset","positionFixedClass","updateFixedSidebarClass","clickedHref","getAttribute","charAt","oldActiveTocLink","activeLinkClass","topHeaderId","hashId","location","hash","activeId","isPageBottomMode","activeTocLink","tocLinks","querySelectorAll","tocLink","tocLis","tocLi","activeListItemClass","li","tocLists","nextSibling","getCurrentlyHighlighting","updateUrlHashForHeader","newHash","history","pushState","tocSelector","contentSelector","contentElement","headingSelector","ignoreSelector","collapseDepth","scrollSmooth","scrollSmoothDuration","scrollSmoothOffset","scrollEndCallback","e","enableUrlHashUpdateOnScroll","scrollHandlerType","scrollHandlerTimeout","throttleTimeout","skipRendering","headingLabelCallback","ignoreHiddenElements","headingObjectCallback","disableTocScrollSync","tocScrollingWrapper","tocScrollOffset","parseContent","reduce","getLastItem","array","getHeadingLevel","toUpperCase","getHeadingObject","maybeElement","HTMLElement","isHTMLElement","headingLabel","String","innerText","trim","headingLevel","nestHeadingsArray","prev","curr","currentHeading","nest","level","lastItem","counter","undefined","push","addNode","selectHeadings","selectors","split","map","selector","console","warn","initSmoothScrolling","duration","offset","pageUrl","stripHash","href","addEventListener","n","tagName","toLowerCase","timeStart","timeElapsed","start","pageYOffset","opt","callback","easing","easeInOutQuad","tgt","decodeURI","join","distance","getBoundingClientRect","top","loop","time","scrollTo","requestAnimationFrame","end","t","b","c","jump","substring","test","tabIndex","focus","url","slice","lastIndexOf","_buildHtml","_parseContent","_headingsArray","_scrollListener","clickListener","_options","init","customOptions","hasInitialized","args","source","key","hasOwnProp","extend","destroy","getContentElement","getTocElement","nestedHeadings","this","isClick","func","timeout","type","debounce","throttle","getScrollHandler","toc","activeItem","scrollAmount","updateTocScroll","isTop","scrollingElement","eventPhase","currentTarget","onhashchange","onscrollend","clearTimeout","setTimeout","innerHTML","removeEventListener","refresh","Object","prototype","hasOwnProperty","fn","threshold","scope","last","deferTimer","context","now","Date","apply","wait"],"sourceRoot":""}